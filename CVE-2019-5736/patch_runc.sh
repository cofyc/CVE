#!/bin/bash

DOCKER_VERSION=$(docker info 2>/dev/null | awk -F: '/^Server Version:/ {gsub(/ /, "", $2); print $2}')

if [ -z "$DOCKER_VERSION" ]; then
    echo "error: docker not found, skipped"
    exit
fi

echo "info: docker version $DOCKER_VERSION"

if [[ "$DOCKER_VERSION" =~ ^18\.09\.(0|1)$ ]]; then
    # for 18.09.0 ~ 18.09.1, runc is in containerd.io package
    echo "info: upgrade containerd.io package to 1.2.2-3"
    sudo apt-get update -y
    sudo apt-get install containerd.io=1.2.2-3 -y
else
    # for docker < 18.09
    DOCKER_RUNC=$(which docker-runc)
    if [ -z "$DOCKER_RUNC" ]; then
        echo "error: docker-runc does not exist"
        exit 1
    fi

    echo "info: docker-runc is at $DOCKER_RUNC"

    tmpdir=$(mktemp -d)
    trap "rm -r $tmpdir" EXIT

    cd $tmpdir
    patchVersion=""
    if [[ "$DOCKER_VERSION" =~ ^18\.06\. ]]; then
        patchVersion="18.06.1"
    elif [[ "$DOCKER_VERSION" =~ ^18\.03\. ]]; then
        patchVersion="18.03.1"
    elif [[ "$DOCKER_VERSION" =~ ^17\.12\. ]]; then
        patchVersion="17.12.1"
    elif [[ "$DOCKER_VERSION" =~ ^17\.09\. ]]; then
        patchVersion="17.09.1"
    elif [[ "$DOCKER_VERSION" =~ ^17\.06\. ]]; then
        patchVersion="17.06.2"
    elif [[ "$DOCKER_VERSION" =~ ^17\.03\. ]]; then
        patchVersion="17.03.2"
    elif [[ "$DOCKER_VERSION" =~ ^1\.13\. ]]; then
        patchVersion="1.13.1"
    elif [[ "$DOCKER_VERSION" =~ ^1\.12\. ]]; then
        patchVersion="1.12.6"
    fi
    RUNC_BIN="runc-v${patchVersion}-amd64"
    RUNC_URL="https://github.com/rancher/runc-cve/releases/download/CVE-2019-5736-build3/$RUNC_BIN"
    echo "info: download patched runc from $RUNC_URL to $tmpdir/$RUNC_BIN"
    wget -q $RUNC_URL
    chmod +x $RUNC_BIN
    ./$RUNC_BIN --version
    if [ $? -ne 0 ]; then
        echo "error: failed to execute './$RUNC_BIN --version', exited"
        exit 1
    fi

    RUNC_BACKUP=$(dirname $DOCKER_RUNC)/$(basename $DOCKER_RUNC).orig.$(date -Iseconds)
    echo "info: backup $DOCKER_RUNC to $RUNC_BACKUP"
    mv $DOCKER_RUNC $RUNC_BACKUP
    mv $tmpdir/$RUNC_BIN $DOCKER_RUNC

    $DOCKER_RUNC --version
    if [ $? -ne 0 ]; then
        echo "error: failed to execute '$DOCKER_RUNC --version', exited"
        exit 1
    fi
fi

echo "info: testing docker is working correctly"
docker run --rm busybox echo "info: docker is ok"
if [ $? -ne 0 ]; then
    echo "error: docker cannot start container, please fix manually"
    exit 1
fi
exit 0
